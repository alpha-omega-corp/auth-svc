syntax = "proto3";

package auth;

option go_package = "./pkg/proto";

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}

  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {}
  rpc GetRoles(GetRolesRequest) returns (GetRolesResponse) {}
  rpc AssignRole(AssignRoleRequest) returns (AssignRoleResponse) {}
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
}

message UpdateUserRequest {
  int64 id = 1;
  string name = 2;
  repeated int64 roles = 3;
}

message UpdateUserResponse {
  int64 status = 1;
  string error = 2;
}

message AssignRoleRequest {
  int64 userId = 1;
  int64 roleId = 2;
}

message AssignRoleResponse {
  int64 status = 1;
  string error = 2;
}

message GetUsersRequest {}
message GetUsersResponse {
  repeated User users = 3;
}

message GetRolesRequest {}
message GetRolesResponse {
  repeated Role roles = 3;
}



message CreateRoleRequest {
  string name = 1;
}

message CreateRoleResponse {
  int64 status = 1;
  string error = 2;
}

message User {
  int64 id = 1;
  string email = 2;
  repeated Role roles = 3;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  int64 status = 1;
  string error = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  int64 status = 1;
  string error = 2;
  string token = 3;
  User user = 4;
}

message ValidateRequest { string token = 1; }

message ValidateResponse {
  int64 status = 1;
  string error = 2;
  User user = 3;
}

message Role {
  int64 id = 1;
  string name = 2;
}